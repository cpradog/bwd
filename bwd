#!/usr/bin/env bash
set -o errexit
set -o nounset
set -o pipefail

##!
# Get executable path or show an error.
#
# $1 the required executable
# $output the executable full path
##
function require_program {
    local program=$1
    local path

    path=$(command -v "${program}" 2>&1)

    if [[ -z "${path}" ]]; then
        echo "[ERROR] required program not found: ${program}" >&2
        exit 1
    fi

    echo "${path}"
}

##!
# Load configuration file if available.
#
# $1 the configuration file path
##
function maybe_load_config {
    local file_path=$1

    if [[ -f "${file_path}" ]]; then
        source "${file_path}"
    fi
}

CURL=$(require_program curl)
JQ=$(require_program jq)

BING_URL=https://www.bing.com
BING_MARKET=es-ES
BING_COUNT=1
WALLPAPERS_DIR=/var/lib/wallpapers
KEEP_DAYS=365

maybe_load_config /etc/bwd.conf
maybe_load_config "${HOME}/.config/bwd/config"

while read -r image; do
    image_date=$(echo "${image}" | awk '{print $1}')
    image_url=$(echo "${image}" | awk '{print $2}')
    ${CURL} -sSLf "${image_url}" --create-dirs --output-dir "${WALLPAPERS_DIR}" -o "bing_${image_date}.jpg"
done < <(
    ${CURL} -sSLf "$(printf "%s/HPImageArchive.aspx?format=js&idx=0&n=%d&mkt=%s" "${BING_URL}" "${BING_COUNT}" "${BING_MARKET}")" \
        | ${JQ} -r ".images[] | .startdate + \" ${BING_URL}\" + .url"
)

if [[ ${KEEP_DAYS} -gt 0 ]]; then
    find "${WALLPAPERS_DIR}" -type f -name 'bing_*' -mtime +${KEEP_DAYS} -delete
fi
